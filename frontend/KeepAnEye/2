async function getCurrentTab() {
  let queryOptions = { active: true, lastFocusedWindow: true };
  // `tab` will either be a `tabs.Tab` instance or `undefined`.
  let [tab] = await chrome.tabs.query(queryOptions);
  console.log(tab.url);
  const res = await fetch(tab.url);
  const data = await res.text();
  const parser = new DOMParser();
  const root = parser.parseFromString(data, "text/html");
  const token = await chrome.storage.sync.get(['accessToken'])
  
  walkTheDOM(root, function(node) {
	  if(node.nodeType === 3) {
		  var text = node.data.trim();
		  if(text.length > 0) {
			  console.log(text);
			   

			  if(token) {
				  const bearer = `Bearer ${token.accessToken}`
				  let url = `http://localhost:8000/api/user/check?content=${text}`
				  console.log("grabbed the token off the DB: ", token.accessToken);
				  console.log("built bearer token: ", bearer);

				  const result = await fetch(url, {
					  "method": "POST",
					  "headers": new Headers({
						  'accept': 'application/json',
						  'Authorization': bearer 
					  }), 
					  body: {

					  }})
				  const jResult = await result.json();
				  console.log(jResult);
  }
}
}
})
getCurrentTab();


async function walkTheDOM(node, func) {
    func(node);
    node = node.firstChild;
    while (node) {
        walkTheDOM(node, func);
        node = node.nextSibling;
    }
}
		/*
	         const result = await fetch(url, {
                    "method": "POST",
                    "mode": "no-cors",
                    "headers": {"content-type": "application/json"},
                    "body": {
			    "content": text
                    }})
		  })
	          
	         if(result) {
			 //found a bad phrase
			 //bad = true;
		 } else {
			 continue
		 }
	        if(bad) //sendtext
	      
		  }
	  */
